# Creates the bamboo agent user and group, and its associated folders

- block:
  - name: '[BAMBOOAGENT] Group "{{ bambooagent_group }}"'
    group:
      name: "{{ bambooagent_group }}"
      state: present
    when: ansible_os_family != "Windows"

  - name: '[BAMBOOAGENT] Group "{{ bambooagent_group }}"'
    win_group:
      name: "{{ bambooagent_group }}"
      state: present
    when: ansible_os_family == "Windows"

#
# Creates the user Ubuntu
- block:

  # this is a bit particular to my own setup as the bambooagent is an LDAP user
  # but we still want the agent to have a home folder
  - name: checking if the local user exists
    getent:
      database: passwd
      key: "{{ bambooagent_user }}"
      split: ':'
      fail_key: no
    register: check_bambooagent

  - name: '[BAMBOOAGENT] Set variable for user existence'
    set_fact:
      no_user: "{{ getent_passwd[bambooagent_user]==None }}"

  - name: '[BAMBOOAGENT] Ensuring home of "{{ bambooagent_user }}" exists (2)'
    file:
      path: "{{ getent_passwd[bambooagent_user][4] }}"
      state: directory
      owner: "{{ bambooagent_user }}"
      group: "{{ bambooagent_group }}"
      mode: "u+rw,g+r"
    when: not no_user

  - name: '[BAMBOOAGENT] Creating non-existing user "{{ bambooagent_user }}"'
    user:
      name: "{{ bambooagent_user }}"
      comment: "Bamboo agent"
      state: present
      group: "{{ bambooagent_group }}"
      createhome: yes
    when: no_user

  - name: '[BAMBOOAGENT] Ensuring root folder of the bamboo agent exists'
    file:
      path: "{{ bambooagent_install_root }}"
      state: directory
      owner: "{{ bambooagent_user }}"
      group: "{{ bambooagent_group }}"
      mode: "u+rw,g+r"
    when: no_user

  when: ansible_distribution == "Ubuntu"


#
# Creates the user / OSX
- block:

  # this is a bit particular to my own setup as the bambooagent is an LDAP user
  # but we still want the agent to have a home folder
  - name: '[BAMBOOAGENT] Creating non-existing user "{{ bambooagent_user }} - OSX"'
    user:
      name: "{{ bambooagent_user }}"
      comment: "Bamboo agent"
      state: present
      group: "{{ bambooagent_group }}"
      createhome: yes
      hidden: yes

  when: ansible_distribution == "MacOSX"

#
# Creates the user / windows
- block:

  - name: '[BAMBOOAGENT][WIN] create user "{{ bambooagent_user }}"'
    win_user:
      name: "{{ bambooagent_user }}"
      fullname: "Bamboo agent user"
      user_cannot_change_password: yes
      password_never_expires: yes
      state: present
      password: "{{ bambooagent_passwd }}"
      groups:
      - "{{ bambooagent_group }}"
    register: win_bamboo_user_reg

  # because this user will be running the service
  - name: '[BAMBOOAGENT][WIN] add account to Log on as a service'
    win_user_right:
      name: SeServiceLogonRight
      users:
      - '{{ ansible_hostname }}\{{ bambooagent_user }}'
      action: add
    ignore_errors: True # ansible 2.7

  # because we may want to log in and create a home folder (temporary directory, etc)
  - name: '[BAMBOOAGENT][WIN] add account to Log on as a user'
    win_user_right:
      name: SeInteractiveLogonRight
      users:
      - "{{ bambooagent_user }}"
      action: add
    ignore_errors: True # ansible 2.7

  - name: '[BAMBOOAGENT][WIN] whoami to create the home folder'
    win_shell: "whoami"
    vars:
        ansible_become: yes
        ansible_become_method: runas
        ansible_become_user: "{{ bambooagent_user }}"
        ansible_become_pass: "{{ bambooagent_passwd }}"

  # PATH is removed as it causes issues with the java service wrapper
  - name: '[BAMBOOAGENT][WIN] remove PATH as workaround for bamboo service'
    win_environment:
      state: absent
      name: PATH
      level: user
    vars:
        ansible_become: yes
        ansible_become_method: runas
        ansible_become_user: "{{ bambooagent_user }}"
        ansible_become_pass: "{{ bambooagent_passwd }}"
    register: bamboo_user_path

  - debug:
      var: bamboo_user_path

  # the content of PATH is put inside LOCAL_PATH for this specific user
  - name: '[BAMBOOAGENT][WIN] add LOCAL_PATH as workaround for bamboo service'
    win_environment:
      state: present
      name: LOCAL_PATH
      level: user
      value: "{{ bamboo_user_path.before_value }}"
    vars:
        ansible_become: yes
        ansible_become_method: runas
        ansible_become_user: "{{ bambooagent_user }}"
        ansible_become_pass: "{{ bambooagent_passwd }}"
    when: bamboo_user_path.changed

  # this can always be there, if the variable %LOCAL_PATH% is not found, it expands
  # to nothing
  - name: '[BAMBOOAGENT][WIN] add LOCAL_PATH to global scope as workaround for bamboo service'
    win_path:
      state: present
      elements:
       - '%LOCAL_PATH%'
      scope: machine

  - name: '[BAMBOOAGENT][WIN] create user "{{ bambooagent_user }}" home'
    win_file:
      path: "{{ bambooagent_install_root }}"
      state: directory

  when: ansible_os_family == "Windows"
  vars:
    bambooagent_passwd: "{{ lookup('password', 'windows/' + inventory_hostname + '/bambooagent length=15') }}"

#
# hides the bamboo agent from the login screen
#

- name: Creates the login hiding file
  file:
    path: "/var/lib/AccountsService/users/{{ bambooagent_user }}"
    state: touch
    owner: root
    group: root
    mode: "u+rw,g+r,o+r"
  when: ansible_distribution == "Ubuntu"

- name: Hides the user from the login screen Ubuntu
  ini_file:
    dest: /var/lib/AccountsService/users/{{ bambooagent_user }}
    section: User
    option: SystemAccount
    value: true
    backup: yes
  when: ansible_distribution == "Ubuntu"


#
# do not let the Bamboo agent to modify its home folder
#
- name: "Prevents the bamboo agent to modify its home folder / non-ubuntu (disabled)"
  file:
    path: "{{ bambooagent_install_root }}"
    state: directory
    owner: "{{ bambooagent_user }}"
    group: "{{ bambooagent_group }}"
    mode: "u+rx,g+rx"
  when:
    - ((check_bambooagent is failed) or (ansible_distribution != "Ubuntu"))
    - False

- name: "Prevents the bamboo agent to modify its home folder / ubuntu (disabled)"
  file:
    path: "{{ getent_passwd[bambooagent_user][4] }}"
    state: directory
    owner: "{{ bambooagent_user }}"
    group: "{{ bambooagent_group }}"
    mode: "u+rx,g+rx"
  when:
    - ((check_bambooagent is succeeded) and (ansible_distribution == "Ubuntu"))
    - False
